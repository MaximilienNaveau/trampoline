name: GameCI Devel ðŸŽ®

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          lfs: true
      
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      
      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
      
      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v4
        with:
          path: trampoline/Library
          key: Library-build-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-build-${{ matrix.targetPlatform }}
            Library-${{ matrix.targetPlatform }}

      # Test
      - name: Run tests
        id: testRunner
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          projectPath: trampoline # Specify the path to your Unity project

      # Output
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test results
          path: ${{ steps.testRunner.outputs.artifactsPath }}      
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Coverage results
          path: ${{ steps.testRunner.outputs.coveragePath }}
